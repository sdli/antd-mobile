{"version":3,"sources":["../../api/lib/appInit.js"],"names":["configs","require","bodyParser","session","cookieParser","captchapng","imgGenerator","num","req","res","pngNum","parseInt","Math","random","pow","p","color","img","getBase64","imgbase64","Buffer","writeHead","end","listen","port","error","console","warn","info","appInit","app","options","use","jsonParser","json","urlencoded","extended","sessionOptions","get","module","exports"],"mappings":"AAAA,IAAIA,UAAUC,QAAQ,aAAR,CAAd;AACA,IAAIC,aAAaD,QAAQ,aAAR,CAAjB;AACA,IAAIE,UAAUF,QAAQ,iBAAR,CAAd;AACA,IAAIG,eAAeH,QAAQ,eAAR,CAAnB;AACA,IAAII,aAAaJ,QAAQ,YAAR,CAAjB;;AAEA;AACA,IAAIK,eAAe,UAASC,GAAT,EAAa;AAC5B,WAAO,UAASC,GAAT,EAAaC,GAAb,EAAiB;AACpB,YAAIC,SAASC,SAASC,KAAKC,MAAL,KAAc,CAAd,GAAgBD,KAAKE,GAAL,CAAS,EAAT,EAAYP,MAAI,CAAhB,CAAhB,GAAmCK,KAAKE,GAAL,CAAS,EAAT,EAAYP,MAAI,CAAhB,CAA5C,CAAb;AACAC,YAAIL,OAAJ,CAAYO,MAAZ,GAAqBA,MAArB;AACA,YAAIK,IAAI,IAAIV,UAAJ,CAAe,EAAf,EAAkB,EAAlB,EAAqBM,SAASD,MAAT,CAArB,CAAR,CAHoB,CAG4B;AAChDK,UAAEC,KAAF,CAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAJoB,CAIE;AACtBD,UAAEC,KAAF,CAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,GAApB,EALoB,CAKM;;AAE1B,YAAIC,MAAMF,EAAEG,SAAF,EAAV;AACA,YAAIC,YAAY,IAAIC,MAAJ,CAAWH,GAAX,EAAe,QAAf,CAAhB;AACAR,YAAIY,SAAJ,CAAc,GAAd,EAAmB;AACf,4BAAgB;AADD,SAAnB;AAGAZ,YAAIa,GAAJ,CAAQH,SAAR;AACH,KAbD;AAcH,CAfD;;AAiBA;AACA,IAAII,SAAS,UAASC,IAAT,EAAc;AACvB,WAAO,UAASC,KAAT,EAAe;AAClB,YAAGA,KAAH,EAAS;AACLC,oBAAQC,IAAR,CAAa,qBAAb;AACH,SAFD,MAEK;AACDD,oBAAQE,IAAR,CAAa,mCAAb,EAAkDJ,IAAlD,EAAwDA,IAAxD;AACH;AACJ,KAND;AAOH,CARD;;AAUA;AACA,IAAIK,UAAU,UAASC,GAAT,EAAaC,OAAb,EAAqB;AAC9B,WAAOA,QAAQ3B,YAAf,KAAgC,WAAhC,IAA+C2B,QAAQ3B,YAAxD,GAAsE0B,IAAIE,GAAJ,CAAQ5B,cAAR,CAAtE,GAA8F,IAA9F;AACC,WAAO2B,QAAQE,UAAf,KAA8B,WAA9B,IAA6CF,QAAQ3B,YAAtD,GAAoE0B,IAAIE,GAAJ,CAAQ9B,WAAWgC,IAAX,EAAR,CAApE,GAA+F,IAA/F;AACC,WAAOH,QAAQE,UAAf,KAA8B,WAA9B,IAA6CF,QAAQ3B,YAAtD,GAAoE0B,IAAIE,GAAJ,CAAQ9B,WAAWiC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR,CAApE,GAAwH,IAAxH;AACC,WAAOL,QAAQM,cAAf,KAAkC,WAAlC,IAAiDN,QAAQ3B,YAA1D,GAAwE0B,IAAIE,GAAJ,CAAQ7B,QAAQ4B,QAAQM,cAAhB,CAAR,CAAxE,GAAiH,IAAjH;AACC,WAAON,QAAQd,GAAf,KAAuB,WAAvB,IAAsCc,QAAQ3B,YAA/C,GAA6D0B,IAAIQ,GAAJ,CAAQ,aAAR,EAAsBhC,aAAayB,QAAQd,GAArB,CAAtB,CAA7D,GAA8G,IAA9G;AACC,WAAOc,QAAQR,MAAf,KAA0B,WAA3B,GAAwCO,IAAIP,MAAJ,CAAWQ,QAAQR,MAAnB,EAA0BA,OAAOQ,QAAQR,MAAf,CAA1B,CAAxC,GAA0F,IAA1F;AACH,CAPD;;AASAgB,OAAOC,OAAP,GAAiBX,OAAjB","file":"appInit.js","sourcesContent":["var configs = require(\"./config.js\");\r\nvar bodyParser = require(\"body-parser\");\r\nvar session = require(\"express-session\");\r\nvar cookieParser = require(\"cookie-parser\");\r\nvar captchapng = require('captchapng');\r\n\r\n//Ëé∑ÂèñpngÂõæÁâáÊñπÊ≥ï\r\nvar imgGenerator = function(num){\r\n    return function(req,res){\r\n        var pngNum = parseInt(Math.random()*9*Math.pow(10,num-1)+Math.pow(10,num-1));\r\n        req.session.pngNum = pngNum;\r\n        var p = new captchapng(80,30,parseInt(pngNum)); // width,height,numeric captcha \r\n        p.color(0, 0, 0, 0);  // First color: background (red, green, blue, alpha) \r\n        p.color(80, 80, 80, 255); // Second color: paint (red, green, blue, alpha) \r\n\r\n        var img = p.getBase64();\r\n        var imgbase64 = new Buffer(img,'base64');\r\n        res.writeHead(200, {\r\n            'Content-Type': 'image/png'\r\n        });\r\n        res.end(imgbase64);\r\n    }\r\n}\r\n\r\n// ÁõëÂê¨ÊñπÊ≥ï\r\nvar listen = function(port){\r\n    return function(error){\r\n        if(error){\r\n            console.warn(\"listen method error\");\r\n        }else{\r\n            console.info(\"==> üåé  API listening on port %s.\", port, port)\r\n        }\r\n    }\r\n};\r\n\r\n// ÈÖçÁΩÆ‰º†ËæìsessionÂíåcookie\r\nvar appInit = function(app,options){\r\n    (typeof options.cookieParser !== \"undefined\" && options.cookieParser)?app.use(cookieParser()):null;\r\n    (typeof options.jsonParser !== \"undefined\" && options.cookieParser)?app.use(bodyParser.json()):null;\r\n    (typeof options.jsonParser !== \"undefined\" && options.cookieParser)?app.use(bodyParser.urlencoded({ extended: false })):null;\r\n    (typeof options.sessionOptions !== \"undefined\" && options.cookieParser)?app.use(session(options.sessionOptions)):null;\r\n    (typeof options.img !== \"undefined\" && options.cookieParser)?app.get(\"/verifycode\",imgGenerator(options.img)):null;\r\n    (typeof options.listen !== \"undefined\")?app.listen(options.listen,listen(options.listen)):null;\r\n}\r\n\r\nmodule.exports = appInit;"]}